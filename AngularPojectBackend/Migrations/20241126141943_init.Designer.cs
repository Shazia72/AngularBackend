// <auto-generated />
using AngularPojectBackend.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AngularPojectBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241126141943_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AngularPojectBackend.BankAccount", b =>
                {
                    b.Property<int>("accountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("accountId"));

                    b.Property<int>("ROI")
                        .HasColumnType("int");

                    b.Property<int>("balance")
                        .HasColumnType("int");

                    b.Property<string>("eTransfer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("insurance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("interestCalculated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("interestPaid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lenderLogo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("minBalance")
                        .HasColumnType("int");

                    b.Property<string>("monthlyFee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rate")
                        .HasColumnType("int");

                    b.Property<string>("transType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("transactionFee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("accountId");

                    b.ToTable("bankAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
